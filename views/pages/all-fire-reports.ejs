<!DOCTYPE html>
<html lang="en">
<style>
</style>
<head>
  <%- include('../partials/head'); %>
  <title>Fire Reports</title>
  <script src='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js'></script>
  <link href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet' />
</head>
<body>

<header>
  <%- include('../partials/header'); %>
</header>

<script>
    document.getElementById('reports-nav-item').classList.add('is-active');
</script>

<main>
  <div class="jumbotron">
    <div class="rows">
        <div class="row">
        <h1 class="title is-1 fire-color"> All Reports </h1>
        <div class="columns">
          <div class="column">
            <div id="map" style="width: 100%; height: 50em; border-radius: 1em; border-radius: 12px; filter: drop-shadow(2px 6px 8px #000000bb)"></div>
          </div>
        </div>
        </div>
        <div classs="row">
            <a class="button button-primary-style hover-translate-up mt-4" style="margin-bottom: 1em; width: 100%" href="/fire-reports"> Make a report </a>
        </div>
    </div>

     
  </div>
  <script>
    mapboxgl.accessToken = "<%= map_token %>";
    fire_reports = <%- JSON.stringify(reports) %>;

    // if location is provided, get location for center of map
    var userLocation = [-117.903663, 33.798444]; // default userMarker location

    // check if user has enabled location service on browser or if supported
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
            userLocation = [position.coords.longitude, position.coords.latitude];
        });
    } else {
    }

    // create new map at default location
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: userLocation,
      zoom: 6,
      projection: 'globe'
    });

    // user marker custom
    var userEl = document.createElement('div');
    userEl.style.width='20px';
    userEl.style.height='20px';
    userEl.style.backgroundImage = 'url(https://em-content.zobj.net/source/emojidex/112/large-blue-circle_1f535.png)';
    userEl.style.backgroundSize = '100%';
    userEl.className = 'marker';
    userEl.draggable = false;

    var userMarker = new mapboxgl.Marker(userEl)
    .setLngLat(userLocation).addTo(map);

    var userPopUp = new mapboxgl.Popup({ offset: 25 }).setText(
        'Your location'
    );

    userMarker.setPopup(userPopUp);


    fire_reports.forEach((report) => {
        // calculate time since report
        var timeSince = Math.floor((new Date() - new Date(report.time)) / 1000 / 60);
        var timeValue = "Just now";
        if (timeSince >= 60 && timeSince < 120) {
            timeValue = '1 hour ago';
        } else if (timeSince >= 1440 && timeSince < 2880) {
            timeValue = '1 day ago';
        } else if (timeSince >= 2880) {
            timeValue = Math.floor(timeSince / 1440) + ' days ago';
        } 
        else if (timeSince >= 120) {
            timeValue = Math.floor(timeSince / 60) + ' hours ago';
        } else if (timeSince < 1) {
            timeValue = 'Just now';
        } 
        else if (timeSince == 1) {
            timeValue = '1 minute ago';
        }
        else {
            timeValue = timeSince + ' minutes ago';
        }

        // create custom marker element
        var el = document.createElement('div');
        el.style.width='30px';
        el.style.height='30px';
        el.style.backgroundImage = 'url(https://em-content.zobj.net/source/animated-noto-color-emoji/356/fire_1f525.gif)';
        el.style.backgroundSize = '100%';
        el.className = 'marker';

        // disable dragging
        el.draggable = false;

        var marker = new mapboxgl.Marker(el)
        .setLngLat(report.location)
        .addTo(map);

        // give the marker a title on hover
        var popupContent = `
            <div style="text-align: center;">
                <p class="is-size-6">Reported ${timeValue}</p>
                <button class="button is-link mt-2 dislike-btn" data-id="${report._id}">ðŸ‘Ž No fire there</button>
            </div>
        `;

        // Attach popup with custom HTML
        var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(popupContent);
        marker.setPopup(popup);

        // Add event listener to handle button clicks after the popup is added to the DOM
        popup.on('open', () => {
            document.querySelector(`.dislike-btn[data-id="${report._id}"]`).addEventListener('click', () => {
                handleDislike(report._id);
                button = document.querySelector(`.dislike-btn[data-id="${report._id}"]`);
                button.disabled = true;
                button.textContent = 'Thanks!';

            });
        });
    });

    function handleDislike(id) {
        fetch(`/fire-report/${id}/dislike`, {
            method: 'POST'
        })
        .then((response) => {
            if (response.ok) {
                console.log('Disliked report');
            } else {
                console.log('Failed to dislike report');
            }
        });
    }

  </script>
</main>

<footer>
  
</footer>

</body>
</html>